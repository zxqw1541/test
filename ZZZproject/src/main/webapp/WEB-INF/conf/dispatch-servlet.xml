<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
        
  <!-- 페이지 컨트롤러를 찾아 객체를 생성한다.
      .단 DAO와 Service 관련 객체는 제외해야 한다. -->
  <context:component-scan base-package="java76.pms.controller"/>

  <!-- @RequestMapping 등 웹 관련 애노테이션을 처리할 객체를 등록한다. -->
  <mvc:annotation-driven/>
  
  <!-- 멀티파트 요청 파라미터를 처리할 객체 등록 -->
  <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxUploadSize" value="10000000"/>
  </bean>
  
  
  <!-- 기존의 뷰 리졸버(view resolver; 뷰 컴포넌트를 실행시키는 객체!)를 대체한다. 
      => 프론트 컨트롤러는 페이지 컨트롤러가 리턴한, 뷰 이도름을 다음 객체에게 전달한다.
      => InternalResourceViewByResovler는 페이지 컨트롤러가 리턴한 값, 앞, 뒤로 그리고 JstlView객체를 통해  JSP를 리턴한다. 
  -->
  
  <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/> <!-- jstl 처리 -->
    <property name="prefix" value="/WEB-INF/jsp/"/>
    <property name="suffix" value=".jsp"/>
  </bean>

</beans>